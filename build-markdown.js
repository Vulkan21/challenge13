#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { marked } = require('marked');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ marked
marked.setOptions({
  breaks: true,
  gfm: true
});

// –ü—É—Ç–∏
const contentDir = './src/content';
const templateDir = './src/templates';
const outputDir = './dist';

// –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω
const template = fs.readFileSync(path.join(templateDir, 'page.html'), 'utf8');

// –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
if (!fs.existsSync(outputDir)) {
  fs.mkdirSync(outputDir, { recursive: true });
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ Markdown —Ñ–∞–π–ª—ã
fs.readdirSync(contentDir).forEach(file => {
  if (path.extname(file) === '.md') {
    const mdContent = fs.readFileSync(path.join(contentDir, file), 'utf8');

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–ª—è title
    const titleMatch = mdContent.match(/^# (.+)$/m);
    const title = titleMatch ? titleMatch[1] : 'Site222';

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Markdown –≤ HTML
    const htmlContent = marked(mdContent);

    // –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤ —à–∞–±–ª–æ–Ω–µ
    const finalHtml = template
      .replace('{{TITLE}}', title)
      .replace('{{CONTENT}}', htmlContent);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    const outputFileName = path.basename(file, '.md') === 'home'
      ? 'index.html'
      : path.basename(file, '.md') + '.html';

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    fs.writeFileSync(path.join(outputDir, outputFileName), finalHtml);

    console.log(`‚úÖ ${file} ‚Üí ${outputFileName}`);
  }
});

console.log('üéâ Markdown ‚Üí HTML –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');